.loadSVG {
    width: 100%;
    height: 100%;
}

.flexcenter {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: nowrap;
}

.viewport {
    min-height: 100%;
    max-height: 100%;
    display: flex;
    flex-wrap: nowrap;
}

.viewport>* {
    flex: 1;
}

.opbutton {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: nowrap;
    padding: 15px 20px;
    border-radius: 5px;
    width: 100%;
    transition: .2s ease;
    background-color: #596b78;
    border: none;
    margin-inline: auto;
}

.opbutton:disabled {
    opacity: .7;
    cursor: not-allowed;
}

.opbutton:not(:disabled):hover {
    background-color: #73828c;
    cursor: pointer;
}

.opbutton.blue {
    background-color: #1095c1;
}

.opbutton.blue:not(:disabled):hover {
    background-color: #19b3e6;
    cursor: pointer;
}




.crbutton {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    flex-wrap: nowrap;
    font-size: 18px;
    background-color: none;
    user-select: none;
    text-decoration: none;
    border: none;
    width: 40px;
    height: 40px;
    background: none;
    border-radius: 50%;
    border: none;
    transition: .2s;
}

.crbutton:disabled {
    opacity: .7;
    cursor: not-allowed;
}

.crbutton:not(:disabled):hover {
    cursor: pointer;
    background-color: var(--background-lightest);
}


.ripples {
    border-radius: 50%;
}

.ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

section.section {
    display: flex;
    flex: 1;
    flex-direction: column;
    flex-wrap: nowrap;
    width: 100%;
    position: fixed;
    inset: 0;
    background-color: var(--background-color);
    z-index: 1;
}

div.sectionview {
    display: flex;
    position: fixed;
    inset: 0;
    z-index: 1;
    justify-content: center;
    align-items: center;
    flex-wrap: nowrap;
    padding: 10px;
    background-color: var(--background-dark);
}

div.sectionview>section.section {
    max-width: 1000px;
    max-height: 600px;
    height: 100%;
    width: 100%;
    inset: initial;
    position: initial;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 0 10px 5px #0005;
}

div.splitsection > section.section {
    flex-direction: row;
}
div.splitsection > section.section > .sectioning {
    height: 100%;
    display: flex;
    flex-direction: column;
    flex: 1;
    position: relative;
}
div.splitsection > section.section > .sectioning-l {
    max-width: 340px;
    border-right: 1px solid var(--border-color);
    height: 100%;
}
.sectioning > section {
    position: absolute;
}

section.transparent {
    justify-content: center;
    align-items: center;
    padding: 10px;
    overflow: auto;
    background-color: var(--background-transparent);
}

header.header {
    display: flex;
    flex-wrap: nowrap;
    justify-content: space-between;
    width: 100%;
    gap: 10px;
    align-items: center;
    padding: 10px;
    border-bottom: 3px solid var(--border-color);
    background-color: var(--background-light);
}

main.mainbody {
    flex: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden auto;
}

.transparent>main.mainbody {
    flex: initial;
    width: 100%;
    max-width: 320px;
    background-color: var(--background-lightest);
    border-radius: 4px;
    padding: 10px;
    gap: 10px;
    box-shadow: 0 0 10px 5px #0003;
}

.tstitle {
    font-weight: 500;
    font-size: 18px;
}

.tsbody {
    font-size: 15px;
    font-weight: 500;
    color: var(--color-dark);
}

.tsoptions {
    display: flex;
    width: 100%;
    align-items: center;
    justify-content: flex-end;
    padding: 10px;
    flex-wrap: wrap;
    gap: 10px;
}

.tsbutton {
    display: inline-flex;
    padding: 10px 20px;
    font-weight: 500;
    color: var(--theme-green);
    background: none;
    border-style: none;
    transition: .2s;
    border-radius: 6px;
}

.tsbutton:disabled {
    cursor: not-allowed;
    opacity: .7;
}

.tsbutton:not(:disabled):hover {
    cursor: pointer;
    background-color: var(--background-lighter);
}

.tsbutton[type=submit] {
    cursor: pointer;
    background-color: var(--theme-blue);
    color: var(--background-color);
}

.tsbutton[type=submit]:not(:disabled):hover {
    cursor: pointer;
    background-color: var(--theme-green);
}

.tsbutton[type=reset] {
    cursor: pointer;
    background-color: var(--theme-red);
    color: var(--background-color);
}

.tsbutton[type=reset]:not(:disabled):hover {
    cursor: pointer;
    background-color: var(--theme-red-dark);
}
a {
    color: #3ac7f7;
    text-decoration: none;
    transition: .2s;
    font-size: 500;
    font-size: 15px;
}

a:hover {
    color: #8be9b9;
}